<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://karram.github.io/</id><title>Technobabble</title><subtitle>Karram's thoughts and ramblings. Mostly on technology. All opinions expressed here are my own.</subtitle> <updated>2022-01-21T06:58:46+01:00</updated> <author> <name>Karram</name> <uri>https://karram.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://karram.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://karram.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> Â© 2022 Karram </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Sqlalchemy basics</title><link href="https://karram.github.io/posts/SqlAlchemy-Basics/" rel="alternate" type="text/html" title="Sqlalchemy basics" /><published>2022-01-21T00:00:00+01:00</published> <updated>2022-01-21T00:00:00+01:00</updated> <id>https://karram.github.io/posts/SqlAlchemy-Basics/</id> <content src="https://karram.github.io/posts/SqlAlchemy-Basics/" /> <author> <name>Karram</name> </author> <summary> SQLAlchemy What is it ? SQLAlchemy is the most popular ORM in python world It lets you model data as classes (Object) and map them to databases (relational) It also talks to multiple DB types such as ms-sql, sqlite, postgres etc and handles the different sql dialects automatically Adapts itself to different DBs just based on the connection string ! Open sourced Who uses it ? Dr... </summary> </entry> <entry><title>Js for react 2</title><link href="https://karram.github.io/posts/JS-for-react-2/" rel="alternate" type="text/html" title="Js for react 2" /><published>2021-12-28T00:00:00+01:00</published> <updated>2021-12-28T00:00:00+01:00</updated> <id>https://karram.github.io/posts/JS-for-react-2/</id> <content src="https://karram.github.io/posts/JS-for-react-2/" /> <author> <name>Karram</name> </author> <summary> JS for React Variable declaration const Identifiers whose value does not change. const x = true x = false // Exception let lexical scoping for variables. Previously, variables declared inside {} or a for loop would be still globals. Variables declared with let have a limited scope. var y = "Hello" if (y) { let y = "world" console.log("block", y) // prints block world } console.log("gl... </summary> </entry> <entry><title>Helloworld</title><link href="https://karram.github.io/posts/Helloworld/" rel="alternate" type="text/html" title="Helloworld" /><published>2021-12-21T00:00:00+01:00</published> <updated>2021-12-21T00:00:00+01:00</updated> <id>https://karram.github.io/posts/Helloworld/</id> <content src="https://karram.github.io/posts/Helloworld/" /> <author> <name>Karram</name> </author> <summary> Hello World ! </summary> </entry> </feed>
